apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'application'

group = 'cic.unb.ca'
version = '4.0'
description = """CICFlowMeterV4"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://clojars.org/repo" }
}
dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.7.25'
    compile group: 'org.jnetpcap', name: 'jnetpcap', version:'1.4.1'
    compile group: 'junit', name: 'junit', version:'4.12'
    compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.6'
    compile group: 'org.apache.commons', name: 'commons-math3', version:'3.5'
    compile group: 'commons-io', name: 'commons-io', version:'2.5'
    compile group: 'nz.ac.waikato.cms.weka', name: 'weka-stable', version:'3.6.14'
    // https://mvnrepository.com/artifact/org.jfree/jfreechart
    compile group: 'org.jfree', name: 'jfreechart', version: '1.5.0'
    // https://mvnrepository.com/artifact/com.google.guava/guava
    compile group: 'com.google.guava', name: 'guava', version: '23.6-jre'
    // https://mvnrepository.com/artifact/org.apache.tika/tika-core
    compile group: 'org.apache.tika', name: 'tika-core', version: '1.17'

}
sourceSets {
    main {
        java {
            srcDir 'src'
            exclude '**/CICFlowMeter.java'
        }
    }
}

jar {
    println 'type Jar'

    manifest {
        attributes "Main-Class": "susman.cs.ncat.edu.ifm.Cmd"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// The Application Plugin
mainClassName = "susman.cs.ncat.edu.ifm.Cmd"
applicationName = "CICFlowMeter"
applicationDefaultJvmArgs = ["-Djava.library.path=../lib/native"]

applicationDistribution.from("jnetpcap/linux/jnetpcap-1.4.r1425") {
    include "*.so"
    into('lib/native')
}
applicationDistribution.from("jnetpcap/win/jnetpcap-1.4.r1425") {
    include "*.dll"
    into('lib/native')
}
applicationDistribution.from('LICENSE.txt'){
    into('')
}
applicationDistribution.from('ReadMe.txt'){
    into('')
    rename("ReadMe.txt","README.md")
}
